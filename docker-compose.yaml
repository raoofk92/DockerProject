services:
  mongo1:
    image: mongo:5
    hostname: mongo1
    container_name: mongo1
    ports:
      - "27017:27017"
    volumes:
      - mongo1:/data/db
    networks:
      - mongoCluster
      - yolo-net
    #command: mongod --replSet myReplicaSet --bind_ip_all
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27017"]

  #volumes:
  #logvolume01: { }
  #docker run -d --rm -p 27017:27017 --name mongo1 --network mongoCluster mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo1



  mongo2:
    image: mongo:5
    hostname: mongo2
    container_name: mongo2
    ports:
      - "27018:27017"
    volumes:
      - mongo2:/data/db
    networks:
      - mongoCluster
    #command: mongod --replSet myReplicaSet --bind_ip_all
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27017"]

  #volumes:
  #logvolume01: { }

  #docker run -d --rm -p 27018:27017 --name mongo2 --network mongoCluster mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo2



  mongo3:
    image: mongo:5
    hostname: mongo3
    container_name: mongo3
    ports:
      - "27019:27017"
    volumes:
      - mongo3:/data/db
    networks:
      - mongoCluster
    #command: mongod --replSet myReplicaSet --bind_ip_all
    command: ["mongod", "--replSet", "myReplicaSet", "--bind_ip_all", "--port", "27017"]

    #volumes:
    #logvolume01: { }
    #docker run -d --rm -p 27019:27017 --name mongo3 --network mongoCluster mongo:5 mongod --replSet myReplicaSet --bind_ip localhost,mongo3

  mongoinit:
    image: mongo:5

    #entrypoint: [ "bash", "/scripts/mongo_setup.sh" ]
    volumes:
      - ./mongofiles:/scripts
    depends_on:
      - mongo2
      - mongo3
      - mongo1
    entrypoint: [ "bash", "/scripts/mongo_setup.sh" ]
    networks:
      - mongoCluster


  polybot:
    image: ${POLYBOT_IMG_NAME}
    hostname: polybot
    container_name: polybot
    ports:
      - "8443:8443"
   # volumes:
     # - ~/.aws/credentials:/root/.aws/credentials
    networks:
      - yolo-polybot
    depends_on:
      - mongoinit
      - yolo5
   # secrets:
    #  - telegram_bot_token.secret
    environment:
      - BUCKET_NAME=${S3_BUCKET_NAME}
      - TELEGRAM_APP_URL=${TELEGRAM_APP_URL}
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}



  yolo5:
   image: ${YOLO5_IMG_NAME}
   hostname: yolo5
   ports:
     - "8081:8081"
   volumes:
     - ~/.aws/:/root/.aws/
   networks:
     - yolo-net
     - yolo-polybot
   depends_on:
     - mongoinit
   environment:
     - BUCKET_NAME=${BUCKET_NAME}








networks:
  mongoCluster:
  yolo-net:
  yolo-polybot:

volumes:
  mongo1:
    driver: local
  mongo2:
    driver: local
  mongo3:
    driver: local



